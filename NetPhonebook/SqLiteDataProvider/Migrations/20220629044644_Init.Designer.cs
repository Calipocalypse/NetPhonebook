// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqLiteDataProvider;

#nullable disable

namespace SqLiteDataProvider.Migrations
{
    [DbContext(typeof(NetphonebookContext))]
    [Migration("20220629044644_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("NetPhonebook.Core.Models.ExtraCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExtraCategories");
                });

            modelBuilder.Entity("NetPhonebook.Core.Models.ExtraInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExtraCategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExtraCategoryId");

                    b.ToTable("ExtraInfos");
                });

            modelBuilder.Entity("NetPhonebook.Core.Models.VirtualModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("virtualModels");
                });

            modelBuilder.Entity("NetPhonebook.Core.Models.VirtualModelsCustomization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("BorderColor")
                        .HasColumnType("TEXT");

                    b.Property<string>("BorderSize")
                        .HasColumnType("TEXT");

                    b.Property<sbyte>("CellId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CornerRadius")
                        .HasColumnType("TEXT");

                    b.Property<string>("FontSize")
                        .HasColumnType("TEXT");

                    b.Property<string>("ForegroundColor")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("virtualModelsCustomizations");
                });

            modelBuilder.Entity("NetPhonebook.Core.Models.ExtraInfo", b =>
                {
                    b.HasOne("NetPhonebook.Core.Models.ExtraCategory", "ExtraCategory")
                        .WithMany("ExtraInfos")
                        .HasForeignKey("ExtraCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtraCategory");
                });

            modelBuilder.Entity("NetPhonebook.Core.Models.VirtualModelsCustomization", b =>
                {
                    b.HasOne("NetPhonebook.Core.Models.VirtualModel", "Model")
                        .WithMany("CustomizationCells")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("NetPhonebook.Core.Models.ExtraCategory", b =>
                {
                    b.Navigation("ExtraInfos");
                });

            modelBuilder.Entity("NetPhonebook.Core.Models.VirtualModel", b =>
                {
                    b.Navigation("CustomizationCells");
                });
#pragma warning restore 612, 618
        }
    }
}
